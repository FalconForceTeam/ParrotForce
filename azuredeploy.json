{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "FalconForceTeam ParrotForce",
        "description": "Azure playbook for automatic evidence collection.",
        "mainSteps": [
            "When... and depending on tags",
            "1. Fetches the device information from MDE/MDATP",
            "2. Get Investigation package or run live response script"
        ],
        "prerequisites": [
            "Sentinel Responder role and some MDE/MDATP permissions are required."
        ],
        "entities": [
            "Host"
        ],
        "tags": [
            "Investigation"
        ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "FalconForceTeam"
        },
        "source": {
            "name": "FalconForceTeam",
            "kind": "Community"
        }
    },
    "parameters": {
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "LogicAppsCategory": "security"
            },
            "metadata": {
                "description": "The Azure tags to set on the resource."
            }
        },
        "PlaybookName": {
            "defaultValue": "ParrotForce",
            "type": "string",
            "metadata": {
                "description": "The Playbook name."
            }
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string",
            "metadata": {
                "description": "Username placeholder."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
        "WDATPConnection": "[concat('Wdatp-', parameters('PlaybookName'))]",
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('WDATPConnection')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "comments": "This is the MDE/WDATP connection.",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "comments": "This is the Microsoft Sentinel connection.",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "comments": "This is the playbook/logicapp.",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('WDATPConnection'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Action",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "HighJewel": {
                                    "case": "High",
                                    "actions": {
                                        "Entities_-_Get_Hosts_2": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/host"
                                            }
                                        },
                                        "For_each_2": {
                                            "foreach": "@body('Entities_-_Get_Hosts_2')?['Hosts']",
                                            "actions": {
                                                "Machines_-_Get_single_machine_2": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/api/machines/@{encodeURIComponent(items('For_each_2')?['AzureID'],items('For_each_2')?['HostName'])}"
                                                    }
                                                },
                                                "TagCheck1": {
                                                    "foreach": "@body('Machines_-_Get_single_machine_2')?['machineTags']",
                                                    "actions": {
                                                        "Condition_2": {
                                                            "actions": {
                                                                "Actions_-_Run_live_response": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Commands": [
                                                                                {
                                                                                    "params": [
                                                                                        {
                                                                                            "key": "ScriptName",
                                                                                            "value": "trident.ps1"
                                                                                        },
                                                                                        {
                                                                                            "key": "FileName",
                                                                                            "value": "winpmem.exe"
                                                                                        }
                                                                                    ],
                                                                                    "type": "PutFile"
                                                                                },
                                                                                {
                                                                                    "params": [
                                                                                        {
                                                                                            "key": "ScriptName",
                                                                                            "value": "trident.ps1 -a"
                                                                                        }
                                                                                    ],
                                                                                    "type": "RunScript"
                                                                                },
                                                                                {
                                                                                    "params": [
                                                                                        {
                                                                                            "key": "Path",
                                                                                            "value": "C:\\ProgramData\\\\Microsoft\\\\Windows Defender Advanced Threat Protection\\\\Downloads\\\\TRIDENT_*.txt"
                                                                                        }
                                                                                    ],
                                                                                    "type": "GetFile"
                                                                                }
                                                                            ],
                                                                            "Comment": "Upload & e Execute Forensic Tools"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/api/machines/@{encodeURIComponent(body('Machines_-_Get_single_machine_2')?['id'])}/runliveresponse"
                                                                    }
                                                                },
                                                                "Add_comment_to_incident_(V3)_2": {
                                                                    "runAfter": {
                                                                        "Actions_-_Run_live_response": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                            "message": "<p>Forensic evidence gathered</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@body('Machines_-_Get_single_machine_2')?['machineTags']",
                                                                            "HighJewel"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Machines_-_Get_single_machine_2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Hosts_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    }
                                },
                                "MediumJewel": {
                                    "case": "Medium",
                                    "actions": {
                                        "Entities_-_Get_Hosts": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/host"
                                            }
                                        },
                                        "For_each": {
                                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                            "actions": {
                                                "Machines_-_Get_single_machine": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/api/machines/@{encodeURIComponent(items('For_each')?['HostName'])}"
                                                    }
                                                },
                                                "TagCheck": {
                                                    "foreach": "@body('Machines_-_Get_single_machine')?['machineTags']",
                                                    "actions": {
                                                        "Condition": {
                                                            "actions": {
                                                                "Actions_-_Collect_investigation_package": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Comment": "Investigation Package initiation"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/api/machines/@{encodeURIComponent(body('Machines_-_Get_single_machine')?['id'])}/collectInvestigationPackage"
                                                                    }
                                                                },
                                                                "Actions_-_Get_investigation_package_download_URI": {
                                                                    "runAfter": {
                                                                        "Until": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "get",
                                                                        "path": "/api/machineactions/@{encodeURIComponent(body('Actions_-_Collect_investigation_package')?['machineId'])}/getPackageUri"
                                                                    }
                                                                },
                                                                "Add_comment_to_incident_(V3)": {
                                                                    "runAfter": {
                                                                        "Actions_-_Get_investigation_package_download_URI": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                            "message": "<p>Download Investigation Package at: @{body('Actions_-_Get_investigation_package_download_URI')?['value']}</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                },
                                                                "Set_variable": {
                                                                    "runAfter": {
                                                                        "Actions_-_Collect_investigation_package": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "Action",
                                                                        "value": "InProgress"
                                                                    }
                                                                },
                                                                "Until": {
                                                                    "actions": {
                                                                        "For_each_3": {
                                                                            "foreach": "@body('Actions_-_Collect_investigation_package')?['commands']",
                                                                            "actions": {
                                                                                "Actions_-_Get_single_machine_action": {
                                                                                    "runAfter": {},
                                                                                    "type": "ApiConnection",
                                                                                    "inputs": {
                                                                                        "host": {
                                                                                            "connection": {
                                                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                                            }
                                                                                        },
                                                                                        "method": "get",
                                                                                        "path": "/api/machineactions/@{encodeURIComponent(items('For_each_3')?['commandStatus'])}"
                                                                                    }
                                                                                }
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "Foreach"
                                                                        },
                                                                        "Set_variable_2": {
                                                                            "runAfter": {
                                                                                "For_each_3": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "SetVariable",
                                                                            "inputs": {
                                                                                "name": "Action",
                                                                                "value": "Succeeded"
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Set_variable": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "expression": "@equals(variables('Action'), 'Succeeded')",
                                                                    "limit": {
                                                                        "count": 60,
                                                                        "timeout": "PT1H"
                                                                    },
                                                                    "type": "Until"
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@body('Machines_-_Get_single_machine')?['machineTags']",
                                                                            "MediumJewel"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Machines_-_Get_single_machine": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Hosts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['object']?['properties']?['severity']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "wdatp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('WDATPConnection'))]",
                                "connectionName": "[variables('WDATPConnection')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/wdatp')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
