{
    "id": "ParrotForce",
    "title": "ParrotForce",
    "description": "Azure playbook for automatic evidence collection through Microsoft 365 Defender",
    "prerequisites": "1. You will need to create machineTags 'HighJewel' and 'MediumJewel' 2. You will need to grant 'AdvancedQuery.Read.All', 'Alert.Read.All', 'File.Read.All', 'Machine.CollectForensics' and 'MachineLiveResponse' permissions to the managed identity ",
    "iconType": "Event",
    "skuType": "Consumption",
    "support": {
        "tier": "community"
    },
    "author": {
        "name": "FalconForceTeam"
    },
    "data": {
        "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "actions": {
                "Initialize_variable": {
                    "inputs": {
                        "variables": [
                            {
                                "name": "Action",
                                "type": "string"
                            }
                        ]
                    },
                    "runAfter": {},
                    "type": "InitializeVariable"
                },
                "Switch": {
                    "cases": {
                        "HighJewel": {
                            "actions": {
                                "Entities_-_Get_Hosts_2": {
                                    "inputs": {
                                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/entities/host"
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                },
                                "For_each_2": {
                                    "actions": {
                                        "Machines_-_Get_single_machine_2": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/api/machines/@{encodeURIComponent(items('For_each_2')?['AzureID'],items('For_each_2')?['HostName'])}"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "TagCheck1": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Actions_-_Run_live_response": {
                                                            "inputs": {
                                                                "body": {
                                                                    "Commands": [
                                                                        {
                                                                            "params": [
                                                                                {
                                                                                    "key": "ScriptName",
                                                                                    "value": "trident.ps1"
                                                                                },
                                                                                {
                                                                                    "key": "FileName",
                                                                                    "value": "winpmem.exe"
                                                                                }
                                                                            ],
                                                                            "type": "PutFile"
                                                                        },
                                                                        {
                                                                            "params": [
                                                                                {
                                                                                    "key": "ScriptName",
                                                                                    "value": "trident.ps1 -a"
                                                                                }
                                                                            ],
                                                                            "type": "RunScript"
                                                                        },
                                                                        {
                                                                            "params": [
                                                                                {
                                                                                    "key": "Path",
                                                                                    "value": "C:\\ProgramData\\\\Microsoft\\\\Windows Defender Advanced Threat Protection\\\\Downloads\\\\TRIDENT_*.txt"
                                                                                }
                                                                            ],
                                                                            "type": "GetFile"
                                                                        }
                                                                    ],
                                                                    "Comment": "Upload & e Execute Forensic Tools"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/api/machines/@{encodeURIComponent(body('Machines_-_Get_single_machine_2')?['id'])}/runliveresponse"
                                                            },
                                                            "runAfter": {},
                                                            "type": "ApiConnection"
                                                        },
                                                        "Add_comment_to_incident_(V3)_2": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>Forensic evidence gathered</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Actions_-_Run_live_response": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('Machines_-_Get_single_machine_2')?['machineTags']",
                                                                    "HighJewel"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Machines_-_Get_single_machine_2')?['machineTags']",
                                            "runAfter": {
                                                "Machines_-_Get_single_machine_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "foreach": "@body('Entities_-_Get_Hosts_2')?['Hosts']",
                                    "runAfter": {
                                        "Entities_-_Get_Hosts_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "case": "High"
                        },
                        "MediumJewel": {
                            "actions": {
                                "Entities_-_Get_Hosts": {
                                    "inputs": {
                                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/entities/host"
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                },
                                "For_each": {
                                    "actions": {
                                        "Machines_-_Get_single_machine": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/api/machines/@{encodeURIComponent(items('For_each')?['HostName'])}"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "TagCheck": {
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Actions_-_Collect_investigation_package": {
                                                            "inputs": {
                                                                "body": {
                                                                    "Comment": "Investigation Package initiation"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/api/machines/@{encodeURIComponent(body('Machines_-_Get_single_machine')?['id'])}/collectInvestigationPackage"
                                                            },
                                                            "runAfter": {},
                                                            "type": "ApiConnection"
                                                        },
                                                        "Actions_-_Get_investigation_package_download_URI": {
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/api/machineactions/@{encodeURIComponent(body('Actions_-_Collect_investigation_package')?['machineId'])}/getPackageUri"
                                                            },
                                                            "runAfter": {
                                                                "Until": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>Download Investigation Package at: @{body('Actions_-_Get_investigation_package_download_URI')?['value']}</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "runAfter": {
                                                                "Actions_-_Get_investigation_package_download_URI": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Set_variable": {
                                                            "inputs": {
                                                                "name": "Action",
                                                                "value": "InProgress"
                                                            },
                                                            "runAfter": {
                                                                "Actions_-_Collect_investigation_package": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        },
                                                        "Until": {
                                                            "actions": {
                                                                "For_each_3": {
                                                                    "actions": {
                                                                        "Actions_-_Get_single_machine_action": {
                                                                            "inputs": {
                                                                                "host": {
                                                                                    "connection": {
                                                                                        "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                                                    }
                                                                                },
                                                                                "method": "get",
                                                                                "path": "/api/machineactions/@{encodeURIComponent(items('For_each_3')?['commandStatus'])}"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "ApiConnection"
                                                                        }
                                                                    },
                                                                    "foreach": "@body('Actions_-_Collect_investigation_package')?['commands']",
                                                                    "runAfter": {},
                                                                    "type": "Foreach"
                                                                },
                                                                "Set_variable_2": {
                                                                    "inputs": {
                                                                        "name": "Action",
                                                                        "value": "Succeeded"
                                                                    },
                                                                    "runAfter": {
                                                                        "For_each_3": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": "@equals(variables('Action'), 'Succeeded')",
                                                            "limit": {
                                                                "count": 60,
                                                                "timeout": "PT1H"
                                                            },
                                                            "runAfter": {
                                                                "Set_variable": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Until"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('Machines_-_Get_single_machine')?['machineTags']",
                                                                    "MediumJewel"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "foreach": "@body('Machines_-_Get_single_machine')?['machineTags']",
                                            "runAfter": {
                                                "Machines_-_Get_single_machine": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                                    "runAfter": {
                                        "Entities_-_Get_Hosts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "case": "Medium"
                        }
                    },
                    "default": {
                        "actions": {}
                    },
                    "expression": "@triggerBody()?['object']?['properties']?['severity']",
                    "runAfter": {
                        "Initialize_variable": [
                            "Succeeded"
                        ]
                    },
                    "type": "Switch"
                }
            },
            "contentVersion": "1.0.0.0",
            "outputs": {},
            "parameters": {
                "$connections": {
                    "defaultValue": {},
                    "type": "Object"
                }
            },
            "triggers": {
                "Microsoft_Sentinel_incident": {
                    "inputs": {
                        "body": {
                            "callback_url": "@{listCallbackUrl()}"
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                            }
                        },
                        "path": "/incident-creation"
                    },
                    "type": "ApiConnectionWebhook"
                }
            }
        },
        "parameters": {},
        "connections": {
            "azuresentinel": {
                "id": "/subscriptions/0000-0000/providers/Microsoft.Web/locations/westeurope/managedApis/azuresentinel",
                "connectionId": "",
                "connectionName": ""
            },
            "wdatp": {
                "id": "/subscriptions/0000-0000/providers/Microsoft.Web/locations/westeurope/managedApis/wdatp",
                "connectionId": "",
                "connectionName": ""
            }
        }
    }
}